        -:    0:Source:D:/Info_Facultate/Semestrul_2/OOP/Lab5/Validator/validator.c
        -:    0:Graph:D:\Info_Facultate\Semestrul_2\OOP\Lab5\cmake-build-debug-coverage\CMakeFiles\Lab5.dir\Validator\validator.c.gcno
        -:    0:Data:D:\Info_Facultate\Semestrul_2\OOP\Lab5\cmake-build-debug-coverage\CMakeFiles\Lab5.dir\Validator\validator.c.gcda
        -:    0:Runs:1
        -:    1:#include "validator.h"
        -:    2:#include <string.h>
        -:    3:
        -:    4:/* Valideaza datele unui medicament
        -:    5:*  cod: codul medicamentului
        -:    6:*  nume: numele medicamentului
        -:    7:*  concentratie: concentratia medicamentului
        -:    8:*  cantitate: cantitatea medicamentului
        -:    9:*  post: in errors vor fi adaugat erorile care apar in urma datelor invalide
        -:   10:*/
function valideaza called 54 returned 100% blocks executed 100%
       54:   11:void valideaza(int cod, char nume[], float concentratie, int cantitate, char* errors)
        -:   12:{
       54:   13:	if (cod < 1)
       54:   13-block  0
branch  0 taken 6 (fallthrough)
branch  1 taken 48
        6:   14:		strcat(errors, "Codul trebuie sa aiba o valoare mai mare ca 0\n");
        6:   14-block  0
       54:   15:	if (concentratie <= 0 || concentratie >= 100)
       54:   15-block  0
branch  0 taken 51 (fallthrough)
branch  1 taken 3
       51:   15-block  1
branch  2 taken 3 (fallthrough)
branch  3 taken 48
        6:   16:		strcat(errors, "Concentratia trebuie sa aiba o valoare in intervalul (0, 100)\n");
        6:   16-block  0
       54:   17:	if (cantitate < 0)
       54:   17-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 50
        4:   18:		strcat(errors, "Cantitatea trebuie sa fie un numar intreg pozitiv\n");
        4:   18-block  0
       54:   19:}
