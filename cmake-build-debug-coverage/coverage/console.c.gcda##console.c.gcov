        -:    0:Source:D:/Info_Facultate/Semestrul_2/OOP/Lab5/UI/console.c
        -:    0:Graph:D:\Info_Facultate\Semestrul_2\OOP\Lab5\cmake-build-debug-coverage\CMakeFiles\Lab5.dir\UI\console.c.gcno
        -:    0:Data:D:\Info_Facultate\Semestrul_2\OOP\Lab5\cmake-build-debug-coverage\CMakeFiles\Lab5.dir\UI\console.c.gcda
        -:    0:Runs:1
        -:    1:#include "console.h"
        -:    2:#include "stdio.h"
        -:    3:#include "../Domain/medicament.h"
        -:    4:#include "string.h"
        -:    5:#include "../Tests/run_tests.h"
        -:    6:#include <stdlib.h>
        -:    7:
        -:    8:/* Creeaza un obiect de tip consola
        -:    9:*  return: consola cu service de medicamente
        -:   10:*/
function creeaza_consola called 1 returned 100% blocks executed 56%
        1:   11:Consola* creeaza_consola()
        -:   12:{
        1:   13:	Consola* consola = malloc(sizeof(Consola));
        1:   14:	if (consola == NULL)
        1:   14-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   15:	{
    #####:   16:		perror("Couldn't allocate memory");
    %%%%%:   16-block  0
call    0 never executed
    #####:   17:		return NULL;
        -:   18:	}
        -:   19:
        1:   20:	ServiceMed* service = creeaza_serviciu();
        1:   20-block  0
call    0 returned 1
        1:   21:	if (service == NULL)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   22:	{
    #####:   23:		perror("Couldn't allocate memory");
    %%%%%:   23-block  0
call    0 never executed
    #####:   24:		return NULL;
        -:   25:	}
        -:   26:
        1:   27:	consola->service = service;
        1:   28:	return consola;
        1:   28-block  0
        -:   29:}
        -:   30:
function distruge_consola called 0 returned 0% blocks executed 0%
    #####:   31:void distruge_consola(Consola* consola)
        -:   32:{
    #####:   33:	distruge_serviciu(consola->service);
    %%%%%:   33-block  0
call    0 never executed
    #####:   34:	free(consola);
    #####:   35:}
        -:   36:
        -:   37:/* Afiseaza meniul aplicatiei
        -:   38:*/
function afiseaza_meniu called 1 returned 100% blocks executed 100%
        1:   39:void afiseaza_meniu()
        -:   40:{
        1:   41:	printf("*********************************************\n");
        1:   41-block  0
call    0 returned 1
        1:   42:	printf("1. Adauga medicament\n");
call    0 returned 1
        1:   43:	printf("2. Modifica medicament\n");
call    0 returned 1
        1:   44:	printf("3. Sterge medicament\n");
call    0 returned 1
        1:   45:	printf("4. Filtreaza dupa cantitate\n");
call    0 returned 1
        1:   46:	printf("5. Filtreaza dupa nume\n");
call    0 returned 1
        1:   47:	printf("P. Afiseaza lista de medicamente ordonate\n");
call    0 returned 1
        1:   48:	printf("X. Iesire aplicatie\n");
call    0 returned 1
        1:   49:	printf("*********************************************\n");
call    0 returned 1
        1:   50:	printf("Alegeti optiunea dorita:\n");
call    0 returned 1
        -:   51:	
        1:   52:}
        -:   53:
        -:   54:/* Afiseaza un medicament
        -:   55:*  m: medicament
        -:   56:*/
function afiseaza_medicament called 0 returned 0% blocks executed 0%
    #####:   57:void afiseaza_medicament(Medicament* m)
        -:   58:{
    #####:   59:	printf("Nume: %s\nConcentratie: %.2lf\nCantitate: %d\n", m->nume, m->concentratie, m->cantitate);
    %%%%%:   59-block  0
call    0 never executed
    #####:   60:}
        -:   61:
        -:   62:/* Sorteaza lista pe baza datelor citite
        -:   63:*  consola: consola curenta
        -:   64:*/
function sorteaza_lista_ui called 0 returned 0% blocks executed 0%
    #####:   65:void sorteaza_lista_ui(Consola* consola)
        -:   66:{
    #####:   67:	char input = 0;
    #####:   68:	printf("crescator/descrescator (c/d):");
    %%%%%:   68-block  0
call    0 never executed
    #####:   69:	int cnt = scanf("\n%c", &input);
call    0 never executed
    #####:   70:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   71:	{
    #####:   72:		printf("Nu s-au putut citi datele!");
    %%%%%:   72-block  0
call    0 never executed
    #####:   73:		return;
    %%%%%:   73-block  0
        -:   74:	}
        -:   75:
    #####:   76:	switch (input) {
    %%%%%:   76-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    #####:   77:	case 'c':
    #####:   78:		sorteaza_medicamente(consola->service, 1);
    %%%%%:   78-block  0
call    0 never executed
    #####:   79:		break;
    #####:   80:	case 'd':
    #####:   81:		sorteaza_medicamente(consola->service, 0);
    %%%%%:   81-block  0
call    0 never executed
    #####:   82:		break;
    #####:   83:	default:
    #####:   84:		return;
    %%%%%:   84-block  0
        -:   85:	}
        -:   86:}
        -:   87:
        -:   88:/* Afiseaza lista de medicamente
        -:   89:*  consola: consola curenta
        -:   90:*/
function afiseaza_lista called 0 returned 0% blocks executed 0%
    #####:   91:void afiseaza_lista(Consola* consola)
        -:   92:{	
    #####:   93:	sorteaza_lista_ui(consola);
    %%%%%:   93-block  0
call    0 never executed
        -:   94:
    #####:   95:	printf("---------------------------\n");
call    0 never executed
    #####:   96:	for (int i = 0; i < consola->service->repo->lista_med->size; i++)
    %%%%%:   96-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   97:	{
    #####:   98:		afiseaza_medicament(consola->service->repo->lista_med->elems[i]);
    %%%%%:   98-block  0
call    0 never executed
    #####:   99:		printf("---------------------------\n");
call    0 never executed
        -:  100:	}
    #####:  101:}
        -:  102:
        -:  103:/* Citeste datele unui medicament
        -:  104:*  cod: codul citit
        -:  105:*  nume: numele citit
        -:  106:*  concentratie: concentratia citita
        -:  107:*  cantitate: cantitatea citita
        -:  108:*/
function citeste_date called 0 returned 0% blocks executed 0%
    #####:  109:void citeste_date(int* cod, char nume[], float* concentratie, int* cantitate)
        -:  110:{
        -:  111:	int cnt;
    #####:  112:	printf("Cod: ");
    %%%%%:  112-block  0
call    0 never executed
    #####:  113:	cnt =  scanf("%d", cod);
call    0 never executed
    #####:  114:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  115:	{
    #####:  116:		printf("Nu s-au putut citi datele!");
    %%%%%:  116-block  0
call    0 never executed
    #####:  117:		return;
        -:  118:	}
        -:  119:
    #####:  120:	printf("Nume: ");
    %%%%%:  120-block  0
call    0 never executed
    #####:  121:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  122:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  123:	{
    #####:  124:		printf("Nu s-au putut citi datele!");
    %%%%%:  124-block  0
call    0 never executed
    #####:  125:		return;
        -:  126:	}
        -:  127:
    #####:  128:	printf("Concentratie: ");
    %%%%%:  128-block  0
call    0 never executed
    #####:  129:	cnt = scanf("%f", concentratie);
call    0 never executed
    #####:  130:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  131:	{
    #####:  132:		printf("Nu s-au putut citi datele!");
    %%%%%:  132-block  0
call    0 never executed
    #####:  133:		return;
        -:  134:	}
        -:  135:
    #####:  136:	printf("Cantitate: ");
    %%%%%:  136-block  0
call    0 never executed
    #####:  137:	cnt = scanf("%d", cantitate);
call    0 never executed
    #####:  138:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  139:	{
    #####:  140:		printf("Nu s-au putut citi datele!");
    %%%%%:  140-block  0
call    0 never executed
    #####:  141:		return;
        -:  142:	}
        -:  143:}
        -:  144:
        -:  145:/* Adauga un medicament la lista pe baza datelor citite
        -:  146:*  consola: consola curenta
        -:  147:*  post: afiseaza erori daca apar
        -:  148:*/ 
function adauga_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  149:void adauga_medicament_ui(Consola* consola)
        -:  150:{
        -:  151:	int cod, cantitate;
        -:  152:	float concentratie;
        -:  153:	char nume[20];
        -:  154:
    #####:  155:	citeste_date(&cod, nume, &concentratie, &cantitate);
    %%%%%:  155-block  0
call    0 never executed
    #####:  156:	char errors[200] = "";
    #####:  157:	adauga_medicament(consola->service, cod, nume, concentratie, cantitate, errors);
call    0 never executed
        -:  158:
    #####:  159:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  160:	{
    #####:  161:		printf("\n---------------------------\n");
    %%%%%:  161-block  0
call    0 never executed
    #####:  162:		printf(errors);
call    0 never executed
    #####:  163:		printf("---------------------------\n");
call    0 never executed
        -:  164:	}
    #####:  165:}
        -:  166:
        -:  167:/* Modifica un medicament pe baza datelor citite
        -:  168:*  consola: consola curenta
        -:  169:*  post: afiseaza erori daca apar
        -:  170:*/
        -:  171:
function modifica_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  172:void modifica_medicament_ui(Consola* consola)
        -:  173:{
        -:  174:	int cod, cnt;
        -:  175:	char nume[20];
        -:  176:	float concentratie;
        -:  177:
    #####:  178:	printf("Cod: ");
    %%%%%:  178-block  0
call    0 never executed
    #####:  179:	cnt = scanf("%d",&cod);
call    0 never executed
    #####:  180:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  181:	{
    #####:  182:		printf("Nu s-au putut citi datele!");
    %%%%%:  182-block  0
call    0 never executed
    #####:  183:		return;
    %%%%%:  183-block  0
        -:  184:	}
        -:  185:
    #####:  186:	printf("Nume: ");
    %%%%%:  186-block  0
call    0 never executed
    #####:  187:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  188:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  189:	{
    #####:  190:		printf("Nu s-au putut citi datele!");
    %%%%%:  190-block  0
call    0 never executed
    #####:  191:		return;
        -:  192:	}
        -:  193:
    #####:  194:	printf("Concentratie: ");
    %%%%%:  194-block  0
call    0 never executed
    #####:  195:	cnt = scanf("%f", &concentratie);
call    0 never executed
    #####:  196:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  197:	{
    #####:  198:		printf("Nu s-au putut citi datele!");
    %%%%%:  198-block  0
call    0 never executed
    #####:  199:		return;
        -:  200:	}
        -:  201:
    #####:  202:	char errors[200] = "";
    #####:  203:	modifica_medicament(consola->service, cod, nume, concentratie, errors);
    %%%%%:  203-block  0
call    0 never executed
        -:  204:
    #####:  205:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  206:	{
    #####:  207:		printf("\n---------------------------\n");
    %%%%%:  207-block  0
call    0 never executed
    #####:  208:		printf(errors);
call    0 never executed
    #####:  209:		printf("---------------------------\n");
call    0 never executed
        -:  210:	}
        -:  211:}
        -:  212:
        -:  213:/* Sterge un medicament din lista pe baza datelor citite
        -:  214:*  consola: consola curenta
        -:  215:*  post: afiseaza erori daca apar
        -:  216:*/
function sterge_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  217:void sterge_medicament_ui(Consola* consola)
        -:  218:{
    #####:  219:	int cod = -1, cnt;
    #####:  220:	printf("Cod: ");
    %%%%%:  220-block  0
call    0 never executed
    #####:  221:	cnt = scanf("%d", &cod);
call    0 never executed
    #####:  222:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  223:	{
    #####:  224:		printf("Nu s-au putut citi datele!");
    %%%%%:  224-block  0
call    0 never executed
    #####:  225:		return;
        -:  226:	}
        -:  227:
    #####:  228:	int status = sterge_medicament(consola->service, cod);
    %%%%%:  228-block  0
call    0 never executed
    #####:  229:	if (status == 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  230:	{
    #####:  231:		printf("\n---------------------------\n");
    %%%%%:  231-block  0
call    0 never executed
    #####:  232:		printf("Medicamentul cu codul dat nu exista\n");
call    0 never executed
    #####:  233:		printf("---------------------------\n");
call    0 never executed
        -:  234:	}
        -:  235:}
        -:  236:
        -:  237:/* Afiseaza medicamentele care au cantitatea mai mica decat o valoare citita
        -:  238:*  consola: consola curenta
        -:  239:*/
function filtreaza_dupa_cantitate_ui called 0 returned 0% blocks executed 0%
    #####:  240:void filtreaza_dupa_cantitate_ui(Consola* consola)
        -:  241:{
        -:  242:	int cantitate;
        -:  243:	int cnt;
        -:  244:
    #####:  245:	printf("Cantitate: ");
    %%%%%:  245-block  0
call    0 never executed
    #####:  246:	cnt = scanf("%d", &cantitate);
call    0 never executed
    #####:  247:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  248:	{
    #####:  249:		printf("Nu s-au putut citi datele!");
    %%%%%:  249-block  0
call    0 never executed
    #####:  250:		return;
        -:  251:	}
        -:  252:
    #####:  253:	List* list = creeaza_lista();
    %%%%%:  253-block  0
call    0 never executed
    #####:  254:	filtreaza_dupa_cantitate(consola->service, list, cantitate);
call    0 never executed
        -:  255:
    #####:  256:	printf("---------------------------\n");
call    0 never executed
    #####:  257:	for (int i = 0; i < list->size; i++)
    %%%%%:  257-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  258:	{
    #####:  259:		afiseaza_medicament(list->elems[i]);
    %%%%%:  259-block  0
call    0 never executed
    #####:  260:		printf("---------------------------\n");
call    0 never executed
        -:  261:	}
    #####:  262:	destroy_list(list);
    %%%%%:  262-block  0
call    0 never executed
        -:  263:}
        -:  264:
        -:  265:/* Afiseaza medicamentele a caror prima litera din nume este aceeasi cu o litera citita
        -:  266:*  consola: consola curenta
        -:  267:*/
function filtreaza_dupa_nume_ui called 0 returned 0% blocks executed 0%
    #####:  268:void filtreaza_dupa_nume_ui(Consola* consola)
        -:  269:{
        -:  270:	char c[5];
        -:  271:	int cnt;
        -:  272:
    #####:  273:	printf("Litera: ");
    %%%%%:  273-block  0
call    0 never executed
    #####:  274:	cnt = scanf("%s", c);
call    0 never executed
    #####:  275:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  276:	{
    #####:  277:		printf("Nu s-au putut citi datele!");
    %%%%%:  277-block  0
call    0 never executed
    #####:  278:		return;
        -:  279:	}
        -:  280:
    #####:  281:	List* list = creeaza_lista();
    %%%%%:  281-block  0
call    0 never executed
    #####:  282:	filtreaza_dupa_nume(consola->service, list, c[0]);
call    0 never executed
        -:  283:
    #####:  284:	printf("---------------------------\n");
call    0 never executed
    #####:  285:	for (int i = 0; i < list->size; i++)
    %%%%%:  285-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  286:	{
    #####:  287:		afiseaza_medicament(list->elems[i]);
    %%%%%:  287-block  0
call    0 never executed
    #####:  288:		printf("---------------------------\n");
call    0 never executed
        -:  289:	}
        -:  290:
    #####:  291:	destroy_list(list);
    %%%%%:  291-block  0
call    0 never executed
        -:  292:}
        -:  293:
function run called 1 returned 0% blocks executed 30%
        1:  294:void run(Consola* consola)
        -:  295:{
        1:  296:	int is_running = 1;
        1:  297:	run_tests();
        1:  297-block  0
call    0 returned 1
        1:  298:	printf("Testele au trecut cu succes!\n\n");
call    0 returned 1
        1:  299:	adauga_default(consola->service);
call    0 returned 1
        -:  300:
        1:  301:	while (is_running)
        1:  301-block  0
branch  0 taken 1
branch  1 taken 0 (fallthrough)
        -:  302:	{
        1:  303:		afiseaza_meniu();
        1:  303-block  0
call    0 returned 1
        -:  304:		char optiune[2];
        -:  305:		int cnt;
        1:  306:		cnt = scanf("%s", optiune);
call    0 returned 0
    #####:  307:		if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  308:		{
    #####:  309:			printf("Nu s-au putut citi datele!");
    %%%%%:  309-block  0
call    0 never executed
    #####:  310:			return;
        -:  311:		}
    #####:  312:		printf("\n");
    %%%%%:  312-block  0
call    0 never executed
        -:  313:		
    #####:  314:		optiune[0] = toupper(optiune[0]);
    #####:  315:		switch (optiune[0]) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:  316:			case '1':
    #####:  317:				adauga_medicament_ui(consola);
    %%%%%:  317-block  0
call    0 never executed
    #####:  318:				break;
        -:  319:
    #####:  320:			case '2':
    #####:  321:				modifica_medicament_ui(consola);
    %%%%%:  321-block  0
call    0 never executed
    #####:  322:				break;
        -:  323:
    #####:  324:			case '3':
    #####:  325:				sterge_medicament_ui(consola);
    %%%%%:  325-block  0
call    0 never executed
    #####:  326:				break;
        -:  327:
    #####:  328:			case '4':
    #####:  329:				filtreaza_dupa_cantitate_ui(consola);
    %%%%%:  329-block  0
call    0 never executed
    #####:  330:				break;
        -:  331:
    #####:  332:			case '5':
    #####:  333:				filtreaza_dupa_nume_ui(consola);
    %%%%%:  333-block  0
call    0 never executed
    #####:  334:				break;
        -:  335:
    #####:  336:			case 'P':
    #####:  337:				afiseaza_lista(consola);
    %%%%%:  337-block  0
call    0 never executed
    #####:  338:				break;
        -:  339:
    #####:  340:			case 'X':
    #####:  341:				is_running = 0;
    #####:  342:				break;
    %%%%%:  342-block  0
        -:  343:
        -:  344:		}
        -:  345:	}
        -:  346:}
