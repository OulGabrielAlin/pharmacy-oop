        -:    0:Source:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/UI/console.c
        -:    0:Graph:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/cmake-build-wsl-valgrind-coverage/CMakeFiles/Lab5.dir/UI/console.c.gcno
        -:    0:Data:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/cmake-build-wsl-valgrind-coverage/CMakeFiles/Lab5.dir/UI/console.c.gcda
        -:    0:Runs:1
        -:    1:#include "console.h"
        -:    2:#include "stdio.h"
        -:    3:#include "../Domain/medicament.h"
        -:    4:#include "string.h"
        -:    5:#include "../Tests/run_tests.h"
        -:    6:#include <stdlib.h>
        -:    7:#include <ctype.h>
        -:    8:
        -:    9:/* Creeaza un obiect de tip consola
        -:   10:*  return: consola cu service de medicamente
        -:   11:*/
function creeaza_consola called 1 returned 100% blocks executed 56%
        1:   12:Consola* creeaza_consola()
        -:   13:{
        1:   14:	Consola* consola = malloc(sizeof(Consola));
        1:   15:	if (consola == NULL)
        1:   15-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   16:	{
    #####:   17:		perror("Couldn't allocate memory");
    %%%%%:   17-block  0
call    0 never executed
    #####:   18:		return NULL;
        -:   19:	}
        -:   20:
        1:   21:	ServiceMed* service = creeaza_serviciu();
        1:   21-block  0
call    0 returned 1
        1:   22:	if (service == NULL)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   23:	{
    #####:   24:		perror("Couldn't allocate memory");
    %%%%%:   24-block  0
call    0 never executed
    #####:   25:		return NULL;
        -:   26:	}
        -:   27:
        1:   28:	consola->service = service;
        1:   29:	return consola;
        1:   29-block  0
        -:   30:}
        -:   31:
function distruge_consola called 1 returned 100% blocks executed 100%
        1:   32:void distruge_consola(Consola* consola)
        -:   33:{
        1:   34:	distruge_serviciu(consola->service);
        1:   34-block  0
call    0 returned 1
        1:   35:	free(consola);
        1:   36:}
        -:   37:
        -:   38:/* Afiseaza meniul aplicatiei
        -:   39:*/
function afiseaza_meniu called 1 returned 100% blocks executed 100%
        1:   40:void afiseaza_meniu()
        -:   41:{
        1:   42:	printf("*********************************************\n");
        1:   42-block  0
call    0 returned 1
        1:   43:	printf("1. Adauga medicament\n");
call    0 returned 1
        1:   44:	printf("2. Modifica medicament\n");
call    0 returned 1
        1:   45:	printf("3. Sterge medicament\n");
call    0 returned 1
        1:   46:	printf("4. Filtreaza dupa cantitate\n");
call    0 returned 1
        1:   47:	printf("5. Filtreaza dupa nume\n");
call    0 returned 1
        1:   48:	printf("6. Filtreaza dupa concentratie\n");
call    0 returned 1
        1:   49:	printf("P. Afiseaza lista de medicamente ordonate\n");
call    0 returned 1
        1:   50:	printf("U. Undo\n");
call    0 returned 1
        1:   51:	printf("X. Iesire aplicatie\n");
call    0 returned 1
        1:   52:	printf("*********************************************\n");
call    0 returned 1
        1:   53:	printf("Alegeti optiunea dorita:\n");
call    0 returned 1
        -:   54:	
        1:   55:}
        -:   56:
        -:   57:/* Afiseaza un medicament
        -:   58:*  m: medicament
        -:   59:*/
function afiseaza_medicament called 0 returned 0% blocks executed 0%
    #####:   60:void afiseaza_medicament(Medicament* m)
        -:   61:{
    #####:   62:	printf("Cod: %d\nNume: %s\nConcentratie: %.2lf\nCantitate: %d\n", m->cod, m->nume, m->concentratie, m->cantitate);
    %%%%%:   62-block  0
call    0 never executed
    #####:   63:}
        -:   64:
        -:   65:/* Sorteaza lista pe baza datelor citite
        -:   66:*  consola: consola curenta
        -:   67:*/
function sorteaza_lista_ui called 0 returned 0% blocks executed 0%
    #####:   68:void sorteaza_lista_ui(Consola* consola)
        -:   69:{
    #####:   70:	char input = 0;
    #####:   71:	printf("crescator/descrescator (c/d):");
    %%%%%:   71-block  0
call    0 never executed
    #####:   72:	int cnt = scanf("\n%c", &input);
call    0 never executed
    #####:   73:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   74:	{
    #####:   75:		printf("Nu s-au putut citi datele!");
    %%%%%:   75-block  0
call    0 never executed
    #####:   76:		return;
    %%%%%:   76-block  0
        -:   77:	}
        -:   78:
    #####:   79:	switch (input) {
    %%%%%:   79-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    #####:   80:	case 'c':
    #####:   81:		sorteaza_medicamente(consola->service, 1);
    %%%%%:   81-block  0
call    0 never executed
    #####:   82:		break;
    #####:   83:	case 'd':
    #####:   84:		sorteaza_medicamente(consola->service, 0);
    %%%%%:   84-block  0
call    0 never executed
    #####:   85:		break;
    #####:   86:	default:
    #####:   87:		return;
    %%%%%:   87-block  0
        -:   88:	}
        -:   89:}
        -:   90:
        -:   91:/* Afiseaza lista de medicamente
        -:   92:*  consola: consola curenta
        -:   93:*/
function afiseaza_lista called 0 returned 0% blocks executed 0%
    #####:   94:void afiseaza_lista(Consola* consola)
        -:   95:{	
    #####:   96:	sorteaza_lista_ui(consola);
    %%%%%:   96-block  0
call    0 never executed
        -:   97:
    #####:   98:	printf("---------------------------\n");
call    0 never executed
    #####:   99:	for (int i = 0; i < consola->service->repo->lista_med->size; i++)
    %%%%%:   99-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  100:	{
    #####:  101:		afiseaza_medicament(consola->service->repo->lista_med->elems[i]);
    %%%%%:  101-block  0
call    0 never executed
    #####:  102:		printf("---------------------------\n");
call    0 never executed
        -:  103:	}
    #####:  104:}
        -:  105:
        -:  106:/* Citeste datele unui medicament
        -:  107:*  cod: codul citit
        -:  108:*  nume: numele citit
        -:  109:*  concentratie: concentratia citita
        -:  110:*  cantitate: cantitatea citita
        -:  111:*/
function citeste_date called 0 returned 0% blocks executed 0%
    #####:  112:void citeste_date(int* cod, char nume[], float* concentratie, int* cantitate)
        -:  113:{
        -:  114:	int cnt;
    #####:  115:	printf("Cod: ");
    %%%%%:  115-block  0
call    0 never executed
    #####:  116:	cnt =  scanf("%d", cod);
call    0 never executed
    #####:  117:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  118:	{
    #####:  119:		printf("Nu s-au putut citi datele!");
    %%%%%:  119-block  0
call    0 never executed
    #####:  120:		return;
        -:  121:	}
        -:  122:
    #####:  123:	printf("Nume: ");
    %%%%%:  123-block  0
call    0 never executed
    #####:  124:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  125:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  126:	{
    #####:  127:		printf("Nu s-au putut citi datele!");
    %%%%%:  127-block  0
call    0 never executed
    #####:  128:		return;
        -:  129:	}
        -:  130:
    #####:  131:	printf("Concentratie: ");
    %%%%%:  131-block  0
call    0 never executed
    #####:  132:	cnt = scanf("%f", concentratie);
call    0 never executed
    #####:  133:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  134:	{
    #####:  135:		printf("Nu s-au putut citi datele!");
    %%%%%:  135-block  0
call    0 never executed
    #####:  136:		return;
        -:  137:	}
        -:  138:
    #####:  139:	printf("Cantitate: ");
    %%%%%:  139-block  0
call    0 never executed
    #####:  140:	cnt = scanf("%d", cantitate);
call    0 never executed
    #####:  141:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  142:	{
    #####:  143:		printf("Nu s-au putut citi datele!");
    %%%%%:  143-block  0
call    0 never executed
    #####:  144:		return;
        -:  145:	}
        -:  146:}
        -:  147:
        -:  148:/* Adauga un medicament la lista pe baza datelor citite
        -:  149:*  consola: consola curenta
        -:  150:*  post: afiseaza erori daca apar
        -:  151:*/ 
function adauga_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  152:void adauga_medicament_ui(Consola* consola)
        -:  153:{
        -:  154:	int cod, cantitate;
        -:  155:	float concentratie;
        -:  156:	char nume[20];
        -:  157:
    #####:  158:	citeste_date(&cod, nume, &concentratie, &cantitate);
    %%%%%:  158-block  0
call    0 never executed
    #####:  159:	char errors[200] = "";
    #####:  160:	adauga_medicament(consola->service, cod, nume, concentratie, cantitate, errors);
call    0 never executed
        -:  161:
    #####:  162:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  163:	{
    #####:  164:		printf("\n---------------------------\n");
    %%%%%:  164-block  0
call    0 never executed
    #####:  165:		printf("%s", errors);
call    0 never executed
    #####:  166:		printf("---------------------------\n");
call    0 never executed
        -:  167:	}
    #####:  168:}
        -:  169:
        -:  170:/* Modifica un medicament pe baza datelor citite
        -:  171:*  consola: consola curenta
        -:  172:*  post: afiseaza erori daca apar
        -:  173:*/
        -:  174:
function modifica_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  175:void modifica_medicament_ui(Consola* consola)
        -:  176:{
        -:  177:	int cod, cnt;
        -:  178:	char nume[20];
        -:  179:	float concentratie;
        -:  180:
    #####:  181:	printf("Cod: ");
    %%%%%:  181-block  0
call    0 never executed
    #####:  182:	cnt = scanf("%d",&cod);
call    0 never executed
    #####:  183:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  184:	{
    #####:  185:		printf("Nu s-au putut citi datele!");
    %%%%%:  185-block  0
call    0 never executed
    #####:  186:		return;
    %%%%%:  186-block  0
        -:  187:	}
        -:  188:
    #####:  189:	printf("Nume: ");
    %%%%%:  189-block  0
call    0 never executed
    #####:  190:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  191:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  192:	{
    #####:  193:		printf("Nu s-au putut citi datele!");
    %%%%%:  193-block  0
call    0 never executed
    #####:  194:		return;
        -:  195:	}
        -:  196:
    #####:  197:	printf("Concentratie: ");
    %%%%%:  197-block  0
call    0 never executed
    #####:  198:	cnt = scanf("%f", &concentratie);
call    0 never executed
    #####:  199:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  200:	{
    #####:  201:		printf("Nu s-au putut citi datele!");
    %%%%%:  201-block  0
call    0 never executed
    #####:  202:		return;
        -:  203:	}
        -:  204:
    #####:  205:	char errors[200] = "";
    #####:  206:	modifica_medicament(consola->service, cod, nume, concentratie, errors);
    %%%%%:  206-block  0
call    0 never executed
        -:  207:
    #####:  208:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  209:	{
    #####:  210:		printf("\n---------------------------\n");
    %%%%%:  210-block  0
call    0 never executed
    #####:  211:		printf("%s", errors);
call    0 never executed
    #####:  212:		printf("---------------------------\n");
call    0 never executed
        -:  213:	}
        -:  214:}
        -:  215:
        -:  216:/* Sterge un medicament din lista pe baza datelor citite
        -:  217:*  consola: consola curenta
        -:  218:*  post: afiseaza erori daca apar
        -:  219:*/
function sterge_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  220:void sterge_medicament_ui(Consola* consola)
        -:  221:{
    #####:  222:	int cod = -1, cnt;
    #####:  223:	printf("Cod: ");
    %%%%%:  223-block  0
call    0 never executed
    #####:  224:	cnt = scanf("%d", &cod);
call    0 never executed
    #####:  225:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  226:	{
    #####:  227:		printf("Nu s-au putut citi datele!");
    %%%%%:  227-block  0
call    0 never executed
    #####:  228:		return;
        -:  229:	}
        -:  230:
    #####:  231:	int status = sterge_medicament(consola->service, cod);
    %%%%%:  231-block  0
call    0 never executed
    #####:  232:	if (status == 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  233:	{
    #####:  234:		printf("\n---------------------------\n");
    %%%%%:  234-block  0
call    0 never executed
    #####:  235:		printf("Medicamentul cu codul dat nu exista\n");
call    0 never executed
    #####:  236:		printf("---------------------------\n");
call    0 never executed
        -:  237:	}
        -:  238:}
        -:  239:
        -:  240:/* Afiseaza medicamentele care au cantitatea mai mica decat o valoare citita
        -:  241:*  consola: consola curenta
        -:  242:*/
function filtreaza_dupa_cantitate_ui called 0 returned 0% blocks executed 0%
    #####:  243:void filtreaza_dupa_cantitate_ui(Consola* consola)
        -:  244:{
        -:  245:	int cantitate;
        -:  246:	int cnt;
        -:  247:
    #####:  248:	printf("Cantitate: ");
    %%%%%:  248-block  0
call    0 never executed
    #####:  249:	cnt = scanf("%d", &cantitate);
call    0 never executed
    #####:  250:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  251:	{
    #####:  252:		printf("Nu s-au putut citi datele!");
    %%%%%:  252-block  0
call    0 never executed
    #####:  253:		return;
        -:  254:	}
        -:  255:
    #####:  256:	List* list = creeaza_lista((void*)distruge_medicament, (void*)copiaza_medicament);
    %%%%%:  256-block  0
call    0 never executed
    #####:  257:	filtreaza_dupa_cantitate(consola->service, list, cantitate);
call    0 never executed
        -:  258:
    #####:  259:	printf("---------------------------\n");
call    0 never executed
    #####:  260:	for (int i = 0; i < list->size; i++)
    %%%%%:  260-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  261:	{
    #####:  262:		afiseaza_medicament(list->elems[i]);
    %%%%%:  262-block  0
call    0 never executed
    #####:  263:		printf("---------------------------\n");
call    0 never executed
        -:  264:	}
    #####:  265:	destroy_list(list);
    %%%%%:  265-block  0
call    0 never executed
        -:  266:}
        -:  267:
        -:  268:/* Afiseaza medicamentele a caror prima litera din nume este aceeasi cu o litera citita
        -:  269:*  consola: consola curenta
        -:  270:*/
function filtreaza_dupa_nume_ui called 0 returned 0% blocks executed 0%
    #####:  271:void filtreaza_dupa_nume_ui(Consola* consola)
        -:  272:{
        -:  273:	char c[5];
        -:  274:	int cnt;
        -:  275:
    #####:  276:	printf("Litera: ");
    %%%%%:  276-block  0
call    0 never executed
    #####:  277:	cnt = scanf("%s", c);
call    0 never executed
    #####:  278:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  279:	{
    #####:  280:		printf("Nu s-au putut citi datele!");
    %%%%%:  280-block  0
call    0 never executed
    #####:  281:		return;
        -:  282:	}
        -:  283:
    #####:  284:	List* list = creeaza_lista((void*)distruge_medicament, (void*)copiaza_medicament);
    %%%%%:  284-block  0
call    0 never executed
    #####:  285:	filtreaza_dupa_nume(consola->service, list, c[0]);
call    0 never executed
        -:  286:
    #####:  287:	printf("---------------------------\n");
call    0 never executed
    #####:  288:	for (int i = 0; i < list->size; i++)
    %%%%%:  288-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  289:	{
    #####:  290:		afiseaza_medicament(list->elems[i]);
    %%%%%:  290-block  0
call    0 never executed
    #####:  291:		printf("---------------------------\n");
call    0 never executed
        -:  292:	}
        -:  293:
    #####:  294:	destroy_list(list);
    %%%%%:  294-block  0
call    0 never executed
        -:  295:}
        -:  296:
        -:  297:/* Afiseaza medicamentele a caror concentratie se afla intre doua valori date
        -:  298:*  consola: consola curenta
        -:  299:*/
function filtreaza_dupa_concentratie_ui called 0 returned 0% blocks executed 0%
    #####:  300:void filtreaza_dupa_concentratie_ui(Consola* consola)
        -:  301:{
        -:  302:	double c1, c2;
        -:  303:	int cnt1, cnt2;
        -:  304:
    #####:  305:	printf("Limita inferioara de concentratie: ");
    %%%%%:  305-block  0
call    0 never executed
    #####:  306:	cnt1 = scanf("%lf", &c1);
call    0 never executed
        -:  307:
    #####:  308:	printf("Limita superioara de concentratie: ");
call    0 never executed
    #####:  309:	cnt2 = scanf("%lf", &c2);
call    0 never executed
        -:  310:
        -:  311:
    #####:  312:	if (cnt1 != 1 || cnt2 != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:  312-block  0
branch  2 never executed (fallthrough)
branch  3 never executed
        -:  313:	{
    #####:  314:		printf("Nu s-au putut citi datele!");
    %%%%%:  314-block  0
call    0 never executed
    #####:  315:		return;
        -:  316:	}
        -:  317:
    #####:  318:	List* list = creeaza_lista((void*)distruge_medicament, (void*)copiaza_medicament);
    %%%%%:  318-block  0
call    0 never executed
    #####:  319:	filtreaza_dupa_concentratie(consola->service, list, c1, c2);
call    0 never executed
        -:  320:
    #####:  321:	printf("---------------------------\n");
call    0 never executed
    #####:  322:	for (int i = 0; i < list->size; i++)
    %%%%%:  322-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  323:	{
    #####:  324:		afiseaza_medicament(list->elems[i]);
    %%%%%:  324-block  0
call    0 never executed
    #####:  325:		printf("---------------------------\n");
call    0 never executed
        -:  326:	}
        -:  327:
    #####:  328:	destroy_list(list);
    %%%%%:  328-block  0
call    0 never executed
        -:  329:}
        -:  330:
function run called 1 returned 100% blocks executed 42%
        1:  331:void run(Consola* consola)
        -:  332:{
        1:  333:	int is_running = 1;
        1:  334:	run_tests();
        1:  334-block  0
call    0 returned 1
        1:  335:	printf("Testele au trecut cu succes!\n\n");
call    0 returned 1
        1:  336:	adauga_default(consola->service);
call    0 returned 1
        -:  337:
        2:  338:	while (is_running)
        2:  338-block  0
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        -:  339:	{
        1:  340:		afiseaza_meniu();
        1:  340-block  0
call    0 returned 1
        -:  341:		char optiune[2];
        -:  342:		int cnt;
        1:  343:		cnt = scanf("%s", optiune);
call    0 returned 1
        1:  344:		if (cnt != 1)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  345:		{
    #####:  346:			printf("Nu s-au putut citi datele!");
    %%%%%:  346-block  0
call    0 never executed
    #####:  347:			return;
        -:  348:		}
        1:  349:		printf("\n");
        1:  349-block  0
call    0 returned 1
        -:  350:		
        1:  351:		optiune[0] = toupper(optiune[0]);
        1:  352:		switch (optiune[0]) {
branch  0 taken 0
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 0
branch  6 taken 0
branch  7 taken 0
branch  8 taken 1
branch  9 taken 0
    #####:  353:			case '1':
    #####:  354:				adauga_medicament_ui(consola);
    %%%%%:  354-block  0
call    0 never executed
    #####:  355:				break;
        -:  356:
    #####:  357:			case '2':
    #####:  358:				modifica_medicament_ui(consola);
    %%%%%:  358-block  0
call    0 never executed
    #####:  359:				break;
        -:  360:
    #####:  361:			case '3':
    #####:  362:				sterge_medicament_ui(consola);
    %%%%%:  362-block  0
call    0 never executed
    #####:  363:				break;
        -:  364:
    #####:  365:			case '4':
    #####:  366:				filtreaza_dupa_cantitate_ui(consola);
    %%%%%:  366-block  0
call    0 never executed
    #####:  367:				break;
        -:  368:
    #####:  369:			case '5':
    #####:  370:				filtreaza_dupa_nume_ui(consola);
    %%%%%:  370-block  0
call    0 never executed
    #####:  371:				break;
        -:  372:
    #####:  373:			case '6':
    #####:  374:				filtreaza_dupa_concentratie_ui(consola);
    %%%%%:  374-block  0
call    0 never executed
    #####:  375:				break;
        -:  376:
    #####:  377:			case 'P':
    #####:  378:				afiseaza_lista(consola);
    %%%%%:  378-block  0
call    0 never executed
    #####:  379:				break;
        -:  380:
    #####:  381:			case 'U':
    #####:  382:				Undo(consola->service);
    %%%%%:  382-block  0
call    0 never executed
    #####:  383:				break;
        -:  384:
        1:  385:			case 'X':
        1:  386:				is_running = 0;
        1:  387:				break;
        1:  387-block  0
        -:  388:
        -:  389:		}
        -:  390:	}
        -:  391:}
