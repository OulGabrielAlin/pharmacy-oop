        -:    0:Source:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/UI/console.c
        -:    0:Graph:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/cmake-build-wsl-valgrind-coverage/CMakeFiles/Lab5.dir/UI/console.c.gcno
        -:    0:Data:/mnt/d/Info_Facultate/Semestrul_2/OOP/Lab5/cmake-build-wsl-valgrind-coverage/CMakeFiles/Lab5.dir/UI/console.c.gcda
        -:    0:Runs:1
        -:    1:#include "console.h"
        -:    2:#include "stdio.h"
        -:    3:#include "../Domain/medicament.h"
        -:    4:#include "string.h"
        -:    5:#include "../Tests/run_tests.h"
        -:    6:#include <stdlib.h>
        -:    7:#include <ctype.h>
        -:    8:
        -:    9:/* Creeaza un obiect de tip consola
        -:   10:*  return: consola cu service de medicamente
        -:   11:*/
function creeaza_consola called 1 returned 100% blocks executed 56%
        1:   12:Consola* creeaza_consola()
        -:   13:{
        1:   14:	Consola* consola = malloc(sizeof(Consola));
        1:   15:	if (consola == NULL)
        1:   15-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   16:	{
    #####:   17:		perror("Couldn't allocate memory");
    %%%%%:   17-block  0
call    0 never executed
    #####:   18:		return NULL;
        -:   19:	}
        -:   20:
        1:   21:	ServiceMed* service = creeaza_serviciu();
        1:   21-block  0
call    0 returned 1
        1:   22:	if (service == NULL)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:   23:	{
    #####:   24:		perror("Couldn't allocate memory");
    %%%%%:   24-block  0
call    0 never executed
    #####:   25:		return NULL;
        -:   26:	}
        -:   27:
        1:   28:	consola->service = service;
        1:   29:	return consola;
        1:   29-block  0
        -:   30:}
        -:   31:
function distruge_consola called 1 returned 100% blocks executed 100%
        1:   32:void distruge_consola(Consola* consola)
        -:   33:{
        1:   34:	distruge_serviciu(consola->service);
        1:   34-block  0
call    0 returned 1
        1:   35:	free(consola);
        1:   36:}
        -:   37:
        -:   38:/* Afiseaza meniul aplicatiei
        -:   39:*/
function afiseaza_meniu called 1 returned 100% blocks executed 100%
        1:   40:void afiseaza_meniu()
        -:   41:{
        1:   42:	printf("*********************************************\n");
        1:   42-block  0
call    0 returned 1
        1:   43:	printf("1. Adauga medicament\n");
call    0 returned 1
        1:   44:	printf("2. Modifica medicament\n");
call    0 returned 1
        1:   45:	printf("3. Sterge medicament\n");
call    0 returned 1
        1:   46:	printf("4. Filtreaza dupa cantitate\n");
call    0 returned 1
        1:   47:	printf("5. Filtreaza dupa nume\n");
call    0 returned 1
        1:   48:	printf("P. Afiseaza lista de medicamente ordonate\n");
call    0 returned 1
        1:   49:	printf("X. Iesire aplicatie\n");
call    0 returned 1
        1:   50:	printf("*********************************************\n");
call    0 returned 1
        1:   51:	printf("Alegeti optiunea dorita:\n");
call    0 returned 1
        -:   52:	
        1:   53:}
        -:   54:
        -:   55:/* Afiseaza un medicament
        -:   56:*  m: medicament
        -:   57:*/
function afiseaza_medicament called 0 returned 0% blocks executed 0%
    #####:   58:void afiseaza_medicament(Medicament* m)
        -:   59:{
    #####:   60:	printf("Cod: %d\nNume: %s\nConcentratie: %.2lf\nCantitate: %d\n", m->cod, m->nume, m->concentratie, m->cantitate);
    %%%%%:   60-block  0
call    0 never executed
    #####:   61:}
        -:   62:
        -:   63:/* Sorteaza lista pe baza datelor citite
        -:   64:*  consola: consola curenta
        -:   65:*/
function sorteaza_lista_ui called 0 returned 0% blocks executed 0%
    #####:   66:void sorteaza_lista_ui(Consola* consola)
        -:   67:{
    #####:   68:	char input = 0;
    #####:   69:	printf("crescator/descrescator (c/d):");
    %%%%%:   69-block  0
call    0 never executed
    #####:   70:	int cnt = scanf("\n%c", &input);
call    0 never executed
    #####:   71:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:   72:	{
    #####:   73:		printf("Nu s-au putut citi datele!");
    %%%%%:   73-block  0
call    0 never executed
    #####:   74:		return;
    %%%%%:   74-block  0
        -:   75:	}
        -:   76:
    #####:   77:	switch (input) {
    %%%%%:   77-block  0
branch  0 never executed
branch  1 never executed
branch  2 never executed
    #####:   78:	case 'c':
    #####:   79:		sorteaza_medicamente(consola->service, 1);
    %%%%%:   79-block  0
call    0 never executed
    #####:   80:		break;
    #####:   81:	case 'd':
    #####:   82:		sorteaza_medicamente(consola->service, 0);
    %%%%%:   82-block  0
call    0 never executed
    #####:   83:		break;
    #####:   84:	default:
    #####:   85:		return;
    %%%%%:   85-block  0
        -:   86:	}
        -:   87:}
        -:   88:
        -:   89:/* Afiseaza lista de medicamente
        -:   90:*  consola: consola curenta
        -:   91:*/
function afiseaza_lista called 0 returned 0% blocks executed 0%
    #####:   92:void afiseaza_lista(Consola* consola)
        -:   93:{	
    #####:   94:	sorteaza_lista_ui(consola);
    %%%%%:   94-block  0
call    0 never executed
        -:   95:
    #####:   96:	printf("---------------------------\n");
call    0 never executed
    #####:   97:	for (int i = 0; i < consola->service->repo->lista_med->size; i++)
    %%%%%:   97-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:   98:	{
    #####:   99:		afiseaza_medicament(consola->service->repo->lista_med->elems[i]);
    %%%%%:   99-block  0
call    0 never executed
    #####:  100:		printf("---------------------------\n");
call    0 never executed
        -:  101:	}
    #####:  102:}
        -:  103:
        -:  104:/* Citeste datele unui medicament
        -:  105:*  cod: codul citit
        -:  106:*  nume: numele citit
        -:  107:*  concentratie: concentratia citita
        -:  108:*  cantitate: cantitatea citita
        -:  109:*/
function citeste_date called 0 returned 0% blocks executed 0%
    #####:  110:void citeste_date(int* cod, char nume[], float* concentratie, int* cantitate)
        -:  111:{
        -:  112:	int cnt;
    #####:  113:	printf("Cod: ");
    %%%%%:  113-block  0
call    0 never executed
    #####:  114:	cnt =  scanf("%d", cod);
call    0 never executed
    #####:  115:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  116:	{
    #####:  117:		printf("Nu s-au putut citi datele!");
    %%%%%:  117-block  0
call    0 never executed
    #####:  118:		return;
        -:  119:	}
        -:  120:
    #####:  121:	printf("Nume: ");
    %%%%%:  121-block  0
call    0 never executed
    #####:  122:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  123:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  124:	{
    #####:  125:		printf("Nu s-au putut citi datele!");
    %%%%%:  125-block  0
call    0 never executed
    #####:  126:		return;
        -:  127:	}
        -:  128:
    #####:  129:	printf("Concentratie: ");
    %%%%%:  129-block  0
call    0 never executed
    #####:  130:	cnt = scanf("%f", concentratie);
call    0 never executed
    #####:  131:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  132:	{
    #####:  133:		printf("Nu s-au putut citi datele!");
    %%%%%:  133-block  0
call    0 never executed
    #####:  134:		return;
        -:  135:	}
        -:  136:
    #####:  137:	printf("Cantitate: ");
    %%%%%:  137-block  0
call    0 never executed
    #####:  138:	cnt = scanf("%d", cantitate);
call    0 never executed
    #####:  139:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  140:	{
    #####:  141:		printf("Nu s-au putut citi datele!");
    %%%%%:  141-block  0
call    0 never executed
    #####:  142:		return;
        -:  143:	}
        -:  144:}
        -:  145:
        -:  146:/* Adauga un medicament la lista pe baza datelor citite
        -:  147:*  consola: consola curenta
        -:  148:*  post: afiseaza erori daca apar
        -:  149:*/ 
function adauga_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  150:void adauga_medicament_ui(Consola* consola)
        -:  151:{
        -:  152:	int cod, cantitate;
        -:  153:	float concentratie;
        -:  154:	char nume[20];
        -:  155:
    #####:  156:	citeste_date(&cod, nume, &concentratie, &cantitate);
    %%%%%:  156-block  0
call    0 never executed
    #####:  157:	char errors[200] = "";
    #####:  158:	adauga_medicament(consola->service, cod, nume, concentratie, cantitate, errors);
call    0 never executed
        -:  159:
    #####:  160:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  161:	{
    #####:  162:		printf("\n---------------------------\n");
    %%%%%:  162-block  0
call    0 never executed
    #####:  163:		printf("%s", errors);
call    0 never executed
    #####:  164:		printf("---------------------------\n");
call    0 never executed
        -:  165:	}
    #####:  166:}
        -:  167:
        -:  168:/* Modifica un medicament pe baza datelor citite
        -:  169:*  consola: consola curenta
        -:  170:*  post: afiseaza erori daca apar
        -:  171:*/
        -:  172:
function modifica_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  173:void modifica_medicament_ui(Consola* consola)
        -:  174:{
        -:  175:	int cod, cnt;
        -:  176:	char nume[20];
        -:  177:	float concentratie;
        -:  178:
    #####:  179:	printf("Cod: ");
    %%%%%:  179-block  0
call    0 never executed
    #####:  180:	cnt = scanf("%d",&cod);
call    0 never executed
    #####:  181:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  182:	{
    #####:  183:		printf("Nu s-au putut citi datele!");
    %%%%%:  183-block  0
call    0 never executed
    #####:  184:		return;
    %%%%%:  184-block  0
        -:  185:	}
        -:  186:
    #####:  187:	printf("Nume: ");
    %%%%%:  187-block  0
call    0 never executed
    #####:  188:	cnt = scanf("%s", nume);
call    0 never executed
    #####:  189:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  190:	{
    #####:  191:		printf("Nu s-au putut citi datele!");
    %%%%%:  191-block  0
call    0 never executed
    #####:  192:		return;
        -:  193:	}
        -:  194:
    #####:  195:	printf("Concentratie: ");
    %%%%%:  195-block  0
call    0 never executed
    #####:  196:	cnt = scanf("%f", &concentratie);
call    0 never executed
    #####:  197:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  198:	{
    #####:  199:		printf("Nu s-au putut citi datele!");
    %%%%%:  199-block  0
call    0 never executed
    #####:  200:		return;
        -:  201:	}
        -:  202:
    #####:  203:	char errors[200] = "";
    #####:  204:	modifica_medicament(consola->service, cod, nume, concentratie, errors);
    %%%%%:  204-block  0
call    0 never executed
        -:  205:
    #####:  206:	if (strlen(errors) > 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  207:	{
    #####:  208:		printf("\n---------------------------\n");
    %%%%%:  208-block  0
call    0 never executed
    #####:  209:		printf("%s", errors);
call    0 never executed
    #####:  210:		printf("---------------------------\n");
call    0 never executed
        -:  211:	}
        -:  212:}
        -:  213:
        -:  214:/* Sterge un medicament din lista pe baza datelor citite
        -:  215:*  consola: consola curenta
        -:  216:*  post: afiseaza erori daca apar
        -:  217:*/
function sterge_medicament_ui called 0 returned 0% blocks executed 0%
    #####:  218:void sterge_medicament_ui(Consola* consola)
        -:  219:{
    #####:  220:	int cod = -1, cnt;
    #####:  221:	printf("Cod: ");
    %%%%%:  221-block  0
call    0 never executed
    #####:  222:	cnt = scanf("%d", &cod);
call    0 never executed
    #####:  223:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  224:	{
    #####:  225:		printf("Nu s-au putut citi datele!");
    %%%%%:  225-block  0
call    0 never executed
    #####:  226:		return;
        -:  227:	}
        -:  228:
    #####:  229:	int status = sterge_medicament(consola->service, cod);
    %%%%%:  229-block  0
call    0 never executed
    #####:  230:	if (status == 0)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  231:	{
    #####:  232:		printf("\n---------------------------\n");
    %%%%%:  232-block  0
call    0 never executed
    #####:  233:		printf("Medicamentul cu codul dat nu exista\n");
call    0 never executed
    #####:  234:		printf("---------------------------\n");
call    0 never executed
        -:  235:	}
        -:  236:}
        -:  237:
        -:  238:/* Afiseaza medicamentele care au cantitatea mai mica decat o valoare citita
        -:  239:*  consola: consola curenta
        -:  240:*/
function filtreaza_dupa_cantitate_ui called 0 returned 0% blocks executed 0%
    #####:  241:void filtreaza_dupa_cantitate_ui(Consola* consola)
        -:  242:{
        -:  243:	int cantitate;
        -:  244:	int cnt;
        -:  245:
    #####:  246:	printf("Cantitate: ");
    %%%%%:  246-block  0
call    0 never executed
    #####:  247:	cnt = scanf("%d", &cantitate);
call    0 never executed
    #####:  248:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  249:	{
    #####:  250:		printf("Nu s-au putut citi datele!");
    %%%%%:  250-block  0
call    0 never executed
    #####:  251:		return;
        -:  252:	}
        -:  253:
    #####:  254:	List* list = creeaza_lista();
    %%%%%:  254-block  0
call    0 never executed
    #####:  255:	filtreaza_dupa_cantitate(consola->service, list, cantitate);
call    0 never executed
        -:  256:
    #####:  257:	printf("---------------------------\n");
call    0 never executed
    #####:  258:	for (int i = 0; i < list->size; i++)
    %%%%%:  258-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  259:	{
    #####:  260:		afiseaza_medicament(list->elems[i]);
    %%%%%:  260-block  0
call    0 never executed
    #####:  261:		printf("---------------------------\n");
call    0 never executed
        -:  262:	}
    #####:  263:	destroy_list(list);
    %%%%%:  263-block  0
call    0 never executed
        -:  264:}
        -:  265:
        -:  266:/* Afiseaza medicamentele a caror prima litera din nume este aceeasi cu o litera citita
        -:  267:*  consola: consola curenta
        -:  268:*/
function filtreaza_dupa_nume_ui called 0 returned 0% blocks executed 0%
    #####:  269:void filtreaza_dupa_nume_ui(Consola* consola)
        -:  270:{
        -:  271:	char c[5];
        -:  272:	int cnt;
        -:  273:
    #####:  274:	printf("Litera: ");
    %%%%%:  274-block  0
call    0 never executed
    #####:  275:	cnt = scanf("%s", c);
call    0 never executed
    #####:  276:	if (cnt != 1)
branch  0 never executed (fallthrough)
branch  1 never executed
        -:  277:	{
    #####:  278:		printf("Nu s-au putut citi datele!");
    %%%%%:  278-block  0
call    0 never executed
    #####:  279:		return;
        -:  280:	}
        -:  281:
    #####:  282:	List* list = creeaza_lista();
    %%%%%:  282-block  0
call    0 never executed
    #####:  283:	filtreaza_dupa_nume(consola->service, list, c[0]);
call    0 never executed
        -:  284:
    #####:  285:	printf("---------------------------\n");
call    0 never executed
    #####:  286:	for (int i = 0; i < list->size; i++)
    %%%%%:  286-block  0
branch  0 never executed
branch  1 never executed (fallthrough)
        -:  287:	{
    #####:  288:		afiseaza_medicament(list->elems[i]);
    %%%%%:  288-block  0
call    0 never executed
    #####:  289:		printf("---------------------------\n");
call    0 never executed
        -:  290:	}
        -:  291:
    #####:  292:	destroy_list(list);
    %%%%%:  292-block  0
call    0 never executed
        -:  293:}
        -:  294:
function run called 1 returned 100% blocks executed 48%
        1:  295:void run(Consola* consola)
        -:  296:{
        1:  297:	int is_running = 1;
        1:  298:	run_tests();
        1:  298-block  0
call    0 returned 1
        1:  299:	printf("Testele au trecut cu succes!\n\n");
call    0 returned 1
        1:  300:	adauga_default(consola->service);
call    0 returned 1
        -:  301:
        2:  302:	while (is_running)
        2:  302-block  0
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        -:  303:	{
        1:  304:		afiseaza_meniu();
        1:  304-block  0
call    0 returned 1
        -:  305:		char optiune[2];
        -:  306:		int cnt;
        1:  307:		cnt = scanf("%s", optiune);
call    0 returned 1
        1:  308:		if (cnt != 1)
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        -:  309:		{
    #####:  310:			printf("Nu s-au putut citi datele!");
    %%%%%:  310-block  0
call    0 never executed
    #####:  311:			return;
        -:  312:		}
        1:  313:		printf("\n");
        1:  313-block  0
call    0 returned 1
        -:  314:		
        1:  315:		optiune[0] = toupper(optiune[0]);
        1:  316:		switch (optiune[0]) {
branch  0 taken 0
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 0
branch  6 taken 1
branch  7 taken 0
    #####:  317:			case '1':
    #####:  318:				adauga_medicament_ui(consola);
    %%%%%:  318-block  0
call    0 never executed
    #####:  319:				break;
        -:  320:
    #####:  321:			case '2':
    #####:  322:				modifica_medicament_ui(consola);
    %%%%%:  322-block  0
call    0 never executed
    #####:  323:				break;
        -:  324:
    #####:  325:			case '3':
    #####:  326:				sterge_medicament_ui(consola);
    %%%%%:  326-block  0
call    0 never executed
    #####:  327:				break;
        -:  328:
    #####:  329:			case '4':
    #####:  330:				filtreaza_dupa_cantitate_ui(consola);
    %%%%%:  330-block  0
call    0 never executed
    #####:  331:				break;
        -:  332:
    #####:  333:			case '5':
    #####:  334:				filtreaza_dupa_nume_ui(consola);
    %%%%%:  334-block  0
call    0 never executed
    #####:  335:				break;
        -:  336:
    #####:  337:			case 'P':
    #####:  338:				afiseaza_lista(consola);
    %%%%%:  338-block  0
call    0 never executed
    #####:  339:				break;
        -:  340:
        1:  341:			case 'X':
        1:  342:				is_running = 0;
        1:  343:				break;
        1:  343-block  0
        -:  344:
        -:  345:		}
        -:  346:	}
        -:  347:}
